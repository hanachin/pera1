#!/usr/bin/env ruby

if ARGV.empty? || ARGV.size != 1
  puts "Usage: pera1 FILE"
  exit(false)
end

file = ARGV.first

unless File.exist?(file)
  puts "#{ARGV.first} is not found"
  exit(false)
end

require 'erb'
template = <<~GEMSPEC
Gem::Specification.new do |s|
  s.name     = <%= name.inspect %>
  s.version  = <%= version.inspect %>
  s.license  = <%= license.inspect %>
  s.summary  = <%= summary.inspect %>
  s.author   = <%= author.inspect %>
  <%- unless email.empty? -%>
  s.email    = <%= email.inspect %>
  <%- end -%>
  <%- unless homepage.empty? -%>
  s.homepage = <%= homepage.inspect %>
  <%- end -%>
  <%- if File.executable?(file) -%>
  s.bindir = '.'
  s.executables << <%= file.inspect %>
  <%- end -%>
end
GEMSPEC

default = lambda do
  name     = File.basename(file, '.rb')
  version  = '0.0.1'
  license  = 'MIT'
  summary  = ''
  author   = `git config --get user.name`.chomp
  email    = `git config --get user.email`.chomp
  homepage = 'https://rubygems.org/gems/' + name
  binding
end

config = default.call

require 'rubygems/user_interaction'
ui = Gem::ConsoleUI.new
RubyVM::InstructionSequence.of(default).to_a[10].each do |c|
  v = config.local_variable_get(c)
  if v.empty?
    a = ui.ask("#{c}:")
  else
    a = ui.ask("#{c}: (#{v})")
  end
  config.local_variable_set(c, a) unless a.empty?
end
gemspec = ERB.new(template, nil, '-').result(config)

dir = File.dirname(file)
gemspec_path = File.join(dir, "#{config.local_variable_get('name')}.gemspec")
File.write(gemspec_path, gemspec)
